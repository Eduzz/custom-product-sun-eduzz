<?php
/**
*
* Implementation necessary to validate data posted to EDUZZ CHECKOUT SUN
* through an ecommerce.
*
* @developed by SUN Team
*
* Copyright Â© 2017 Eduzz Tecnology.
*
*/

class ProductCustomSunEduzz {

  private $hashCustomValue; // Hash generated by this Class using private data
  private $hashCustomShipping; // Hash generated by this Class using private data

  public $productValue; // Custom product value

  public $zipCode; // ZipCode to be printed with the addres at Eduzz
  public $deadline; // Custom shipping delivery deadline
  public $shippingValue; // Custom shipping valeu

  public $contentId; // ContentId registered in MyEduzz
  public $publicKey; // Public Key genrated by MyEduzz
  public $privateKey; // Private Key generated by MyEduzz
  public $orderId; // Custom meta data, refers to your e-commerce transaction. Not mandatory.
  public $title; // Custom product title.
  public $desc; // Custom product desc

  /**
  * Generate and set HashCustomValue
  **/
  private function setHashCustomValue()
  {
    $this->hashCustomValue = md5('custom-value' .
                                    $this->contentId .
                                    $this->productValue .
                                    $this->publicKey .
                                    $this->privateKey);
  }

  /**
  * Generate and set HashCustomShipping
  **/
  private function setHashCustomShipping()
  {
    $this->hashCustomShipping = md5('custom-ship' .
                                        $this->contentId .
                                        $this->shippingValue .
                                        $this->deadline .
                                        $this->publicKey .
                                        $this->privateKey);
  }

  /**
  * Validation methods
  *
  * Should validate the whole params needed to run
  *
  **/
  private function validateCustomValue()
  {
    if(!is_numeric( $this->productValue ) && !empty( $this->productValue ))
    {
      throw new Exception('[EDZ0002] Cannot generate the Hash without a numeric '.
                          'productValue and productValue');
    }

    if( !empty( $this->productValue )  )
    {
      return true;
    }

    return false;
  }

  private function validateEduzzData()
  {
    if( empty( $this->contentId ) ||
        empty( $this->publicKey ) ||
        empty( $this->privateKey ) )
    {
      throw new Exception('[EDZ0003] Cannot generate the Hash without contentId, publicKey or privateKey');
    }
    return true;
  }


  private function validateCustomShipping()
  {
    if( !is_numeric( $this->deadline ) && !empty( $this->deadline ) ||
        !is_numeric( $this->shippingValue )  && !empty( $this->shippingValue )  )
    {
      throw new Exception('[EDZ0001] Cannot generate the Hash withou a numeric deadline and shippingValue');
    }

    if( !empty( $this->deadline ) && !empty( $this->shippingValue ) )
    {
      return true;
    }

    return false;
  }

  /**
  * Generate Hash to set custom data on checkout sun
  **/
  public function generateBase64Hash()
  {
    $isCustomValue    = $this->validateCustomValue();
    $isCustomShipping = $this->validateCustomShipping();

    if( $this->validateEduzzData() &&
        ( $isCustomValue ||  $isCustomShipping ))
    {
        $vecData = array(
          '3rd' => array(
            'publicKey' => $this->publicKey,
            'orderId' => $this->orderId
          )
        );

        if($isCustomValue)
        {
          $this->setHashCustomValue();
          $vecCustomValue = array(
            'value' => $this->productValue,
        		'hash' => $this->hashCustomValue,
          );

          if (isset($this->title) && !empty($this->title))
            $vecCustomValue['title'] = $this->title;

          if (isset($this->desc) && !empty($this->desc))
            $vecCustomValue['desc'] = $this->desc;

          $vecData['product'] = $vecCustomValue;
        }

        if($isCustomShipping)
        {
          $this->setHashCustomShipping();
          $vecCustomValue = array(
            'deadline' => $this->deadline,
      			'value' => $this->shippingValue,
      			'hash' => $this->hashCustomShipping,
            'zipCode' => $this->zipCode
          );
          $vecData['ship'] = $vecCustomValue;
        }

        return base64_encode(json_encode($vecData));

    }
    throw new Exception('[EDZ0001] Cannot generate, read the documentation at github '.
                        'eduzz/custom-product-sun-eduzz');

  }

  public function generateUrl()
  {
    $generatedHash = $this->generateBase64Hash();

    return 'https://c.eduzz.com/'. $this->contentId . '?dataCtm=' . $generatedHash . '&cep=' . $this->zipCode;
  }

}
